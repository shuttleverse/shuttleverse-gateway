server:
  port: 8082

spring:
  application:
    name: api-gateway

  # Redis Configuration (for rate limiting)
  data:
    redis:
      host: localhost
      port: 6379

  # OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-client-secret}
            redirect-uri: "http://localhost:8082/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - email
              - profile

  # Gateway Configuration
  cloud:
    gateway:
      # Global filters applied to all routes
      default-filters:
        - TokenRelay
        - SaveSession

      # Route definitions
      routes:
        - id: aggregator-service
          uri: http://localhost:8080
          predicates:
            - Path=/api/aggregator/**

        - id: community-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/community/**

# Resilience4j Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      userServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      orderServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

    timelimiter:
      instances:
        userServiceCircuitBreaker:
          timeoutDuration: 2s
        orderServiceCircuitBreaker:
          timeoutDuration: 2s
        productServiceCircuitBreaker:
          timeoutDuration: 2s

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always